use Mail::Sender;
use DateTime;
use strict;
use warnings;
use Parallel::ForkManager;
use Config::Tiny;
use WWW::Selenium;

my $cfg = Config::Tiny->new;
$cfg = Config::Tiny->read('.testrc'); 

my @browser = split(/:/,$cfg->{_}->{browser});
my @testcase = split(/::/,$cfg->{_}->{testSuite});
#my @testcase = split(/::/,$ENV{testSuite});
my @parallel;
my $tc;
my $browser;

my $cmd  = 'perl -e "my $i=0; print($i);"';
my $res = $$.".txt";
my $output;
system($cmd .">".$res);

foreach $tc (@testcase){
	foreach $browser (@browser){
		$parallel[@parallel] = $tc.":".$browser
	}
}
my $i= @parallel;

my $pm = new Parallel::ForkManager($i);
my $pid;

foreach $tc (@parallel){

  $pid =  $pm->start and next;
  if($pid == 0){
  	
	my @tc = split(/:/,$tc);
	
   my $dt = DateTime->now( time_zone  => 'local',);
   my $filename_fs = "Results\\Results_".$dt->ymd('_')."_".$dt->hour()."_".$dt->minute()."_".$dt->second()."_".$tc[0]."_".$tc[2].$$.".txt";  
   my $host = 'mx.valuelabs.net';
   my $displayname = 'Automation';
   my $to = 'madhubabu.garlapati';
   my $cc = 'madhubabu.garlapati1';
   my $subject = 'Automated Test Case Summary';

my $msgbody = "Hi All,<br><br> Please find the status of the Automated Test Summary in the following Attachment.<br>";
$msgbody = $msgbody."<table><tr><td>Tests Executed </td><td>:</td><td><b> $tc[0] </b> in ENV <b> $tc[1]</b></td></tr>";
$msgbody = $msgbody."<tr><td>Browser</td><td> :</td><td> <b>$tc[2]</b></td></tr>";
$msgbody = $msgbody."</table><br>Thanks, <br><b>Automation Team</b><br><br><b>Note</b>:This is an automated Email generated by Selenium.";
$msgbody = $msgbody."All failed cases would be re-executed manually to verify if they are really build error(s) and not Test Data/Script errors";

 my $report = "Reports\\Reports_".$dt->ymd('_')."_".$dt->hour()."_".$dt->minute()."_".$dt->second()."_".$tc[0]."_".$tc[2].$$.".xls";  

 $cmd = "prove -vm t/$tc[0].t :: .testrc $tc[2] $tc[1] $report  >  $filename_fs";
 system($cmd);
my $sender = new Mail::Sender{smtp => $host, from => $displayname."\@valuelabs.net"};
$sender->MailFile({to => $to,cc=>$cc,subject => $subject,msg =>$msgbody,b_ctype=>'text/html',file =>"$report,$filename_fs", ctype=>'application/octet-stream'});
$output = qx("type $filename_fs");
if ($output =~ /Result: PASS/) {
$cmd = 'perl -e "my $i=0; print($i);"';
}else{
$cmd = 'perl -e "my $i=1; print($i);"';
}
system($cmd .">>".$res);
}
$pm->finish();
}
 $pm->wait_all_children;
$output = qx("type $res");   
qx("del $res");
if ($output =~ /1/) {
exit 1;
}
else{
exit 0;
}
  
  my $sel = WWW::Selenium->new(
            host    => $cfg->{_}->{host},
            port        => $cfg->{_}->{port},
           browser     => $browser[0],
            browser_url => 'http://www.localhost.com');
  $sel->start();
  $sel->open("/");
  $sel->shut_down_selenium_server();